% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ajustar_modelos_Distance.R
\name{ajustar_modelos_Distance}
\alias{ajustar_modelos_Distance}
\title{Ajusta modelos de detecção com diferentes funções chave e termos de ajuste}
\usage{
ajustar_modelos_Distance(
         dados,
         funcao_chave = c("hn", "hr", "unif"),
         termos_ajuste = NULL,
         truncamento = NULL,
         formula = ~ 1
       )
}
\arguments{
\item{dados}{recebe a \code{tibble} gerada pela função \code{\link[=transformar_dados_formato_Distance]{transformar_dados_formato_Distance()}}.}

\item{funcao_chave}{recebe uma dentre três funções utilizadas para modelar a
detectabilidade da espécie: "hn" - Half-normal; "hr" - Hazard-rate; e
"unif" - Uniform}

\item{termos_ajuste}{recebe um dentre n termos de ajuste: \code{"cos"} - cosseno;
\code{"herm"} - Hermet polynomial; e \code{"poly"} - Polinomial simples. Quando \code{NULL}
diferentes modelos são ajustados para função chave escolhida utilizando
diferentes termos de ajuste. Veja Details.}

\item{truncamento}{breve descrição do argumento}

\item{formula}{breve descrição do argumento}
}
\value{
Retorna uma lista contendo a estimativa de abundância para região
estudada
}
\description{
A função \code{ajustar_modelos_Distance()} ajusta aos dados modelos com diferentes
funções chave e termos de ajuste.
}
\details{
Quando \code{termo_ajuste = NULL} modelos com diferente termos de ajuste serão
ajustados aos dados, a depender da função chave utilizada. Para
\code{funcao_chave = "hn"}, são utilizados os termos de ajuste \code{NULL} (sem termos),
\code{"cos"} e \code{"herm"}; para \code{funcao_chave = "hr"}, são utilizados os termos de
ajuste \code{NULL} (sem termos), \code{"cos"} e \code{"poly"}; e para \code{funcao_chave  = "unif"},
são utilizados so termos de ajuste \code{"cos"} e \code{"poly"}
}
\examples{
# gerar dados filtrados para a uma espécie e uma UC e transformar para o
# formato para a análise no pacote Distance
dados_dasy_croc_tap_arap <- filtrar_dados(
  dados = monitora_aves_masto_florestal,
  nome_ucs = "resex_tapajos_arapiuns",
  nome_sps = "dasyprocta_croconota",
  validacao_obs = "especie"
) |>
  transformar_dados_formato_Distance(amostras_repetidas = FALSE)

# ajustar modelo com função chave Half-normal e todas os termos de ajuste
# possíveis
dasyp_croc_resex_tap_arap_hn <- dados_dasy_croc_tap_arap |>
  ajustar_modelos_Distance(
    funcao_chave = "hn",
    termos_ajuste = NULL,
    truncamento = "10\%"
  )

dasyp_croc_resex_tap_arap_hn

# ajustando a função de detecção half-normal, sem termo de ajuste para um
# truncamento de 10\% dos dados e uma covariável
dasy_croc_tap_arap_hn_cov1 <- dados_dasy_croc_tap_arap |>
  ajustar_modelos_Distance(
    funcao_chave = "hn",
    termos_ajuste = NULL,
    truncamento = "10\%",
    formula = ~ size
  )

dasy_croc_tap_arap_hn_cov1

# ajustando a função de detecção half-normal, sem termo de ajuste para um
# truncamento de 10\% dos dados e duas covariáveis
dasy_croc_tap_arap_hn_cov2 <- dados_dasy_croc_tap_arap |>
  ajustar_modelos_Distance(
    funcao_chave = "hn",
    termos_ajuste = NULL,
    truncamento = "10\%",
    formula = ~ size + cense_time
  )

dasy_croc_tap_arap_hn_cov2
}
