% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gerar_resultados_Distance.R
\name{gerar_resultados_Distance}
\alias{gerar_resultados_Distance}
\title{Resultados sobre a Área, Abundância e densidade estimada, detecção e
coeficiente de variação}
\usage{
gerar_resultados_Distance(
  dados,
  resultado_selecao_modelos,
  tipo_de_resultado = c("area_estudo", "abundância", "densidade"),
  estratificacao = FALSE,
  nivel_estratificacao
)
}
\arguments{
\item{dados}{recebe uma lista nomeada gerada pela função
\code{\link[=gerar_lista_modelos_selecionados]{gerar_lista_modelos_selecionados()}} contendo os modelos de função de
detecção}

\item{resultado_selecao_modelos}{recebe a tibble gerada pela função
\code{\link[=selecionar_funcao_deteccao_termo_ajuste]{selecionar_funcao_deteccao_termo_ajuste()}}}

\item{tipo_de_resultado}{caracter que define o tipo do resultado desejado
pelo usuário}

\item{estratificacao}{lógico, indica se os modelos informados contém ou não
estratificação}
}
\value{
Retorna uma \code{tibble}.
}
\description{
Descrever o que cada opção retorna
}
\examples{
\dontrun{
# gerar dados filtrados
dados_filtrados <- filtrar_dados(
  nome_uc = "resex_tapajos_arapiuns",
  nome_sps = "dasyprocta_croconota",
  validacao_obs = "especie"
)

# gerar os dados transformados com repeticao
dados_distance_com_repeticao <- dados_filtrados |>
  transformar_dados_formato_Distance()

# modelo Half-normal
modelo_hn <- dados_distance_com_repeticao |>
  ajustar_modelos_Distance(
    funcao_chave = "hn",
    truncamento = 15
  )

# modelo Hazard-rate
modelo_hr <- dados_distance_com_repeticao |>
  ajustar_modelos_Distance(
    funcao_chave = "hr",
    truncamento = 15
  )

# modelo Uniform
modelo_unif <- dados_distance_com_repeticao |>
  ajustar_modelos_Distance(
    funcao_chave = "unif",
    truncamento = 15
  )

# gerar a tabela de seleção com o resumo comparativo dos modelos
selecao_funcao_deteccao_termo_ajuste <- selecionar_funcao_deteccao_termo_ajuste(
  modelo_hn$`Sem termo`,
  modelo_hn$Cosseno,
  modelo_hn$`Hermite polinomial`,
  modelo_hr$`Sem termo`,
  modelo_hr$Cosseno,
  modelo_hr$`Polinomial simples`,
  modelo_unif$Cosseno,
  modelo_unif$`Polinomial simples`
)

# gerar uma lista nomeada com os modelos selecionados ordenados do melhor para o pior modelo
lista_modelos_selecionados <- gerar_lista_modelos_selecionados(
  modelo_hr$`Sem termo`,
  modelo_hn$Cosseno,
  modelo_unif$Cosseno,
  modelo_unif$`Polinomial simples`,
  modelo_hn$`Sem termo`,
  nome_modelos_selecionados = selecao_funcao_deteccao_termo_ajuste
)

resultados_distance_area_estudo <-gerar_resultados_Distance(
  dados = lista_modelos_selecionados,
  resultado_selecao_modelos = selecao_funcao_deteccao_termo_ajuste,
  tipo_de_resultado = "area_estudo"
  )

resultados_distance_area_estudo

resultados_distance_abundancia <-gerar_resultados_Distance(
  dados = lista_modelos_selecionados,
  resultado_selecao_modelos = selecao_funcao_deteccao_termo_ajuste,
  tipo_de_resultado = "abundancia"
)

resultados_distance_abundancia

resultados_distance_densidade <-gerar_resultados_Distance(
  dados = lista_modelos_selecionados,
  resultado_selecao_modelos = selecao_funcao_deteccao_termo_ajuste,
  tipo_de_resultado = "densidade"
)

resultados_distance_densidade
}
}
